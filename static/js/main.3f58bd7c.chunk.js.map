{"version":3,"sources":["App.tsx","index.tsx"],"names":["web3Modal","Web3Modal","network","cacheProvider","providerOptions","requestSign","address","category","header","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","then","response","json","catch","error","console","log","App","useState","instance","setInstance","provider","setProvider","running","setRunning","onConnection","connect","i","useEffect","ethers","providers","Web3Provider","claimAll","contract","Contract","getSigner","getAddress","signature","mint","claimAllWrapper","className","href","target","rel","selectedAddress","onClick","disabled","rootElement","document","getElementById","ReactDOMClient","render"],"mappings":"2OAKMA,EAAY,IAAIC,IAAU,CAC9BC,QAAS,UACTC,eAAe,EACfC,gBAAiB,KAGbC,EAAW,iDAAG,WAAOC,EAAiBC,GAAxB,4FACZC,EAAS,IAAIC,SACZC,OAAO,SAAU,qCACxBF,EAAOE,OAAO,kBAAmB,2BACjCF,EAAOE,OAAO,gBAAiB,YAC/BF,EAAOE,OAAO,eAAgB,oBAExBC,EAAMC,KAAKC,UAAU,CACzBP,QAASA,EACTC,aAGIO,EAAiB,CACrBC,OAAQ,OACRC,QAASR,EACTS,KAAMN,EACNO,SAAU,UAhBM,kBAmBXC,MACL,2DAEAL,GAECM,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAI,QAASF,OAzBvB,2CAAH,wDA4BF,SAASG,IACtB,MAAgCC,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAGIF,mBAA+C,MAHnD,mBACEG,EADF,KAEEC,EAFF,KAIA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEMC,EAAY,iDAAG,kGACfN,EADe,iEAEH7B,EAAUoC,UAFP,OAEbC,EAFa,OAGnBP,EAAYO,GAHO,2CAAH,qDAMlBC,qBAAU,WACHT,GACLG,EAAY,IAAIO,IAAOC,UAAUC,aAAaZ,MAC7C,CAACA,IAEJ,IAAMa,EAAQ,iDAAG,uGACVX,EADU,wDAETY,EAAW,IAAIJ,IAAOK,SAC1B,6CACA,CAAC,sEACDb,EAASc,aALI,SAOOd,EAASc,YAAYC,aAP5B,OAOTxC,EAPS,OAQN+B,EAAI,EARE,YAQCA,GAAK,GARN,kCASWhC,EAAYC,EAAS+B,GAThC,eASPU,EATO,iBAUPJ,EACHK,KAAKX,EAAGU,EAAS,EAAOA,EAAS,WACjCxB,OAAM,eAZI,QAabE,QAAQC,IAAR,wBAA6BW,IAbhB,QAQSA,IART,2DAAH,qDAiBRY,EAAe,iDAAG,wGAEpBf,GAAW,GAFS,SAGdQ,IAHc,sDAKpBjB,QAAQD,MAAR,MALoB,OAOtBU,GAAW,GAPW,yDAAH,qDAUrB,OACE,sBAAKgB,UAAU,MAAf,UACE,0JAGA,oSAEE,mBACEC,KAAK,kCACLC,OAAO,SACPC,IAAI,aAHN,8BAQF,2MAIE,mBACEF,KAAK,kCACLC,OAAO,SACPC,IAAI,aAHN,gCAQDxB,EACC,qCAEE,0DAASA,EAASyB,mBAClB,wBAAQC,QAASN,EAAiBO,SAAUvB,EAA5C,gDAKF,qCACE,8EAEE,uBAFF,kDAKA,wBAAQsB,QAASpB,EAAjB,qCCzHV,IAAMsB,EAAcC,SAASC,eAAe,QAC/BC,aAA0BH,GAElCI,OACH,cAAC,aAAD,UACE,cAAClC,EAAD,S","file":"static/js/main.3f58bd7c.chunk.js","sourcesContent":["import \"./styles.css\";\nimport { ethers } from \"ethers\";\nimport Web3Modal from \"web3modal\";\nimport { useEffect, useState } from \"react\";\n\nconst web3Modal = new Web3Modal({\n  network: \"mainnet\", // optional\n  cacheProvider: true, // optional\n  providerOptions: {} // required\n});\n\nconst requestSign = async (address: string, category: number) => {\n  const header = new Headers();\n  header.append(\"accept\", \"application/json, text/plain, */*\");\n  header.append(\"accept-language\", \"zh-CN,zh;q=0.9,en;q=0.8\");\n  header.append(\"cache-control\", \"no-cache\");\n  header.append(\"content-type\", \"application/json\");\n\n  const raw = JSON.stringify({\n    address: address,\n    category\n  });\n\n  const requestOptions = {\n    method: \"POST\",\n    headers: header,\n    body: raw,\n    redirect: \"follow\"\n  };\n\n  return fetch(\n    \"https://us-central1-ldr-prod.cloudfunctions.net/api/sign\",\n    //@ts-ignore\n    requestOptions\n  )\n    .then((response) => response.json())\n    .catch((error) => console.log(\"error\", error));\n};\n\nexport default function App() {\n  const [instance, setInstance] = useState(null);\n  const [\n    provider,\n    setProvider\n  ] = useState<ethers.providers.Web3Provider | null>(null);\n  const [running, setRunning] = useState(false);\n\n  const onConnection = async () => {\n    if (instance) return;\n    const i = await web3Modal.connect();\n    setInstance(i);\n  };\n\n  useEffect(() => {\n    if (!instance) return;\n    setProvider(new ethers.providers.Web3Provider(instance));\n  }, [instance]);\n\n  const claimAll = async () => {\n    if (!provider) return;\n    const contract = new ethers.Contract(\n      \"0xFD43D1dA000558473822302e1d44D81dA2e4cC0d\",\n      [\"function mint ( uint256 _category, bytes _data, bytes _signature )\"],\n      provider.getSigner()\n    );\n    const address = await provider.getSigner().getAddress();\n    for (let i = 1; i <= 9; i++) {\n      const signature = await requestSign(address, i);\n      await contract\n        .mint(i, signature[\"v\"], signature[\"signature\"])\n        .catch(() => {});\n      console.log(`Success mint #${i}`);\n    }\n  };\n\n  const claimAllWrapper = async () => {\n    try {\n      setRunning(true);\n      await claimAll();\n    } catch (e) {\n      console.error(e);\n    }\n    setRunning(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>\n        LDR NFT一键FreeMint 脚本制作人：BOX，推特：https://twitter.com/BoxMrChen\n      </h1>\n      <h2>\n        如果使用中出现，连接钱包无反应，无法切换钱包，或者其他问题，可以尝试使用生产部署版本：\n        <a\n          href=\"https://csb-lmeudq.netlify.app/\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Netlify版\n        </a>\n      </h2>\n      <h2>\n        If you have problems connecting to your wallet, not responding, not\n        being able to switch wallets, or other problems, you can try using the\n        production deployment version:\n        <a\n          href=\"https://csb-lmeudq.netlify.app/\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Netlify version\n        </a>\n      </h2>\n      {instance ? (\n        <>\n          {/* @ts-ignore */}\n          <p>当前地址:{instance.selectedAddress}</p>\n          <button onClick={claimAllWrapper} disabled={running}>\n            领取全部LDR NFT\n          </button>\n        </>\n      ) : (\n        <>\n          <p>\n            请确保使用ETH主网\n            <br />\n            Please make sure to use the ETH main network\n          </p>\n          <button onClick={onConnection}>Connection wallet</button>\n        </>\n      )}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\n// @ts-ignore\nimport * as ReactDOMClient from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = ReactDOMClient.createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}